{"ast":null,"code":"import _defineProperty from\"/Users/oussamatouahri/uOttawa/Summer2023/SEG3525/SEG3525-Project2/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/oussamatouahri/uOttawa/Summer2023/SEG3525/SEG3525-Project2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/oussamatouahri/uOttawa/Summer2023/SEG3525/SEG3525-Project2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/Users/oussamatouahri/uOttawa/Summer2023/SEG3525/SEG3525-Project2/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import'./App.css';import'bootstrap/dist/css/bootstrap.min.css';import{useEffect,useState}from'react';import{data}from\"./programs_data\";import{empty}from\"./empty\";import Programs from'./programs';import CardGroup from'react-bootstrap/CardGroup';import Container from'react-bootstrap/esm/Container';import Row from'react-bootstrap/esm/Row';import Facets_container from'./Facets_container';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var build_categorical_facet_values=function build_categorical_facet_values(name){var values=_toConsumableArray(new Set(data.map(function(item){return item[name];})));return values.map(function(value){return{'name':value,'checked':false};});};// Initial state\nvar _useState=useState({all_programs:data,shown_programs:data,no_programs:empty,facets:{location:build_categorical_facet_values('location'),hours:build_categorical_facet_values('hours'),'Martial Art':build_categorical_facet_values('Martial Art')}}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];//Updates state.shown_programs whenever state.facets changes\nuseEffect(function(){var facets={};// Get all the facet values that are true/active/selected.\nObject.entries(state.facets).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),name=_ref2[0],values=_ref2[1];facets[name]=[];values.forEach(function(value){if(value.checked){facets[name].push(value.name);}});});// If there are no facets selected, don't show programs\nif(Object.values(facets).every(function(arr){return arr.length===0;})){setState(_objectSpread(_objectSpread({},state),{},{shown_programs:state.no_programs}));return;}// Getting the number of active facet (Not facet_values)\nvar number_of_active_facets=Object.values(facets).filter(function(x){return x.length;}).length;// Double loop through all programs and all active facets\n// Keep only the programs that match the active facets\nvar to_show=state.all_programs.map(function(program){return Object.entries(facets).map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),name=_ref4[0],values=_ref4[1];return values.includes(program[name]);}).filter(Boolean).length==number_of_active_facets?program:undefined;}).filter(Boolean);setState(_objectSpread(_objectSpread({},state),{},{shown_programs:to_show}));},[state.facets]);function clearAllFacetValues(facet){var new_facet=state.facets[facet].map(function(facet_value){return _objectSpread(_objectSpread({},facet_value),{},{checked:false});});setState(_objectSpread(_objectSpread({},state),{},{facets:_objectSpread(_objectSpread({},state.facets),{},_defineProperty({},facet,new_facet))}));}// Function to pass down to the Facet_value component to modify the state in this component.\nfunction updateCategory(facet,value,newChecked){var new_facet=state.facets[facet].map(function(_ref5){var name=_ref5.name,checked=_ref5.checked;return{name:name,checked:name==value?newChecked:checked};});setState(_objectSpread(_objectSpread({},state),{},{facets:_objectSpread(_objectSpread({},state.facets),{},_defineProperty({},facet,new_facet))}));}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Facets_container,{facets:state.facets,updateCategory:updateCategory,clearAllFacetValues:clearAllFacetValues})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Container,{className:\"d-flex flex-wrap cards-row\",children:state.shown_programs.map(function(x){return/*#__PURE__*/_jsx(Programs,_objectSpread({},x));})})})]});}export default App;","map":{"version":3,"names":["useEffect","useState","data","empty","Programs","CardGroup","Container","Row","Facets_container","jsx","_jsx","jsxs","_jsxs","App","build_categorical_facet_values","name","values","_toConsumableArray","Set","map","item","value","_useState","all_programs","shown_programs","no_programs","facets","location","hours","_useState2","_slicedToArray","state","setState","Object","entries","forEach","_ref","_ref2","checked","push","every","arr","length","_objectSpread","number_of_active_facets","filter","x","to_show","program","_ref3","_ref4","includes","Boolean","undefined","clearAllFacetValues","facet","new_facet","facet_value","_defineProperty","updateCategory","newChecked","_ref5","children","className"],"sources":["/Users/oussamatouahri/uOttawa/Summer2023/SEG3525/SEG3525-Project2/src/App.js"],"sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { useEffect, useState } from 'react';\nimport { data } from \"./programs_data\"\nimport { empty } from \"./empty\"\nimport Programs from './programs';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport Container from 'react-bootstrap/esm/Container';\nimport Row from 'react-bootstrap/esm/Row';\n\nimport Facets_container from './Facets_container';\n\n\nfunction App() {\n\n  const build_categorical_facet_values = (name) => {\n    const values = [...new Set(data.map(item => item[name]))]\n    return values.map(value => ({ 'name': value, 'checked': false }))\n  }\n\n  // Initial state\n  const [state, setState] = useState({\n    all_programs: data,\n    shown_programs: data,\n    no_programs: empty,\n    facets: {\n      location: build_categorical_facet_values('location'),\n      hours: build_categorical_facet_values('hours'),\n      'Martial Art': build_categorical_facet_values('Martial Art')\n    }\n  })\n\n\n  //Updates state.shown_programs whenever state.facets changes\n  useEffect(() => {\n    const facets = {}\n    // Get all the facet values that are true/active/selected.\n    Object.entries(state.facets).forEach(([name, values]) => {\n      facets[name] = []\n      values.forEach(value => {\n        if (value.checked) {\n          facets[name].push(value.name)\n        }\n      })\n    })\n\n    // If there are no facets selected, don't show programs\n    if (Object.values(facets).every(arr => arr.length === 0)) {\n      setState({ ...state, shown_programs: state.no_programs })\n      return\n    }\n\n   \n\n    // Getting the number of active facet (Not facet_values)\n    const number_of_active_facets = Object.values(facets).filter(x => x.length).length\n\n    // Double loop through all programs and all active facets\n    // Keep only the programs that match the active facets\n    const to_show = state.all_programs.map(program =>\n      Object.entries(facets).map(([name, values]) =>\n        values.includes(program[name])).filter(Boolean).length == number_of_active_facets ? program : undefined\n    ).filter(Boolean)\n    \n\n    setState({ ...state, shown_programs: to_show })\n  }, [state.facets])\n\n  function clearAllFacetValues(facet) {\n    const new_facet = state.facets[facet].map(facet_value => ({\n      ...facet_value, checked: false\n    }))\n    setState({ ...state, facets: { ...state.facets, [facet]: new_facet } })\n  }\n\n  // Function to pass down to the Facet_value component to modify the state in this component.\n  function updateCategory(facet, value, newChecked) {\n    const new_facet = state.facets[facet].map(({ name, checked }) => ({ name: name, checked: name == value ? newChecked : checked }))\n    setState({ ...state, facets: { ...state.facets, [facet]: new_facet } })\n  }\n\n  return (\n    <div>\n   \n      <Row>\n       \n        <Facets_container  facets={state.facets} updateCategory={updateCategory} clearAllFacetValues={clearAllFacetValues} />\n        \n\n      </Row>\n      <Row>\n        <Container className='d-flex flex-wrap cards-row'>\n          {state.shown_programs.map(x => <Programs {...x} />)}\n        </Container>\n      </Row>\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}