{"ast":null,"code":"var _jsxFileName = \"/Users/oussamatouahri/uOttawa/Summer2023/SEG3525/Project2/oma/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useEffect, useState } from 'react';\nimport { data } from \"./programs_data\";\nimport { empty } from \"./empty\";\nimport Programs from './programs';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport Container from 'react-bootstrap/esm/Container';\nimport Row from 'react-bootstrap/esm/Row';\nimport Facets_container from './Facets_container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const build_categorical_facet_values = name => {\n    const values = [...new Set(data.map(item => item[name]))];\n    return values.map(value => ({\n      'name': value,\n      'checked': false\n    }));\n  };\n\n  // Initial state\n  const [state, setState] = useState({\n    all_programs: data,\n    shown_programs: data,\n    no_programs: empty,\n    facets: {\n      location: build_categorical_facet_values('location'),\n      hours: build_categorical_facet_values('hours'),\n      'Martial Art': build_categorical_facet_values('Martial Art')\n    }\n  });\n\n  //Updates state.shown_programs whenever state.facets changes\n  useEffect(() => {\n    const facets = {};\n    // Get all the facet values that are true/active/selected.\n    Object.entries(state.facets).forEach(_ref => {\n      let [name, values] = _ref;\n      facets[name] = [];\n      values.forEach(value => {\n        if (value.checked) {\n          facets[name].push(value.name);\n        }\n      });\n    });\n\n    // If there are no facets selected, don't show programs\n    if (Object.values(facets).every(arr => arr.length === 0)) {\n      setState({\n        ...state,\n        shown_programs: state.no_programs\n      });\n      return;\n    }\n\n    // Getting the number of active facet (Not facet_values)\n    const number_of_active_facets = Object.values(facets).filter(x => x.length).length;\n\n    // Double loop through all programs and all active facets\n    // Keep only the programs that match the active facets\n    const to_show = state.all_programs.map(program => Object.entries(facets).map(_ref2 => {\n      let [name, values] = _ref2;\n      return values.includes(program[name]);\n    }).filter(Boolean).length == number_of_active_facets ? program : undefined).filter(Boolean);\n\n    //if the choice doesnt exixt////\n    if (to_show === []) {\n      console.log(\"no results\");\n    }\n    setState({\n      ...state,\n      shown_programs: to_show\n    });\n  }, [state.facets]);\n  function clearAllFacetValues(facet) {\n    const new_facet = state.facets[facet].map(facet_value => ({\n      ...facet_value,\n      checked: false\n    }));\n    setState({\n      ...state,\n      facets: {\n        ...state.facets,\n        [facet]: new_facet\n      }\n    });\n  }\n\n  // Function to pass down to the Facet_value component to modify the state in this component.\n  function updateCategory(facet, value, newChecked) {\n    const new_facet = state.facets[facet].map(_ref3 => {\n      let {\n        name,\n        checked\n      } = _ref3;\n      return {\n        name: name,\n        checked: name == value ? newChecked : checked\n      };\n    });\n    setState({\n      ...state,\n      facets: {\n        ...state.facets,\n        [facet]: new_facet\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Facets_container, {\n        facets: state.facets,\n        updateCategory: updateCategory,\n        clearAllFacetValues: clearAllFacetValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"d-flex flex-wrap cards-row\",\n        children: state.shown_programs.map(x => /*#__PURE__*/_jsxDEV(Programs, {\n          ...x\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"81RI25tAv/lNoD1S2rVh10/8Pxk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","data","empty","Programs","CardGroup","Container","Row","Facets_container","jsxDEV","_jsxDEV","App","_s","build_categorical_facet_values","name","values","Set","map","item","value","state","setState","all_programs","shown_programs","no_programs","facets","location","hours","Object","entries","forEach","_ref","checked","push","every","arr","length","number_of_active_facets","filter","x","to_show","program","_ref2","includes","Boolean","undefined","console","log","clearAllFacetValues","facet","new_facet","facet_value","updateCategory","newChecked","_ref3","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/oussamatouahri/uOttawa/Summer2023/SEG3525/Project2/oma/src/App.js"],"sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { useEffect, useState } from 'react';\nimport { data } from \"./programs_data\"\nimport { empty } from \"./empty\"\nimport Programs from './programs';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport Container from 'react-bootstrap/esm/Container';\nimport Row from 'react-bootstrap/esm/Row';\n\nimport Facets_container from './Facets_container';\n\n\nfunction App() {\n\n  const build_categorical_facet_values = (name) => {\n    const values = [...new Set(data.map(item => item[name]))]\n    return values.map(value => ({ 'name': value, 'checked': false }))\n  }\n\n  // Initial state\n  const [state, setState] = useState({\n    all_programs: data,\n    shown_programs: data,\n    no_programs: empty,\n    facets: {\n      location: build_categorical_facet_values('location'),\n      hours: build_categorical_facet_values('hours'),\n      'Martial Art': build_categorical_facet_values('Martial Art')\n    }\n  })\n\n\n  //Updates state.shown_programs whenever state.facets changes\n  useEffect(() => {\n    const facets = {}\n    // Get all the facet values that are true/active/selected.\n    Object.entries(state.facets).forEach(([name, values]) => {\n      facets[name] = []\n      values.forEach(value => {\n        if (value.checked) {\n          facets[name].push(value.name)\n        }\n      })\n    })\n\n    // If there are no facets selected, don't show programs\n    if (Object.values(facets).every(arr => arr.length === 0)) {\n      setState({ ...state, shown_programs: state.no_programs })\n      return\n    }\n\n   \n\n    // Getting the number of active facet (Not facet_values)\n    const number_of_active_facets = Object.values(facets).filter(x => x.length).length\n\n    // Double loop through all programs and all active facets\n    // Keep only the programs that match the active facets\n    const to_show = state.all_programs.map(program =>\n      Object.entries(facets).map(([name, values]) =>\n        values.includes(program[name])).filter(Boolean).length == number_of_active_facets ? program : undefined\n    ).filter(Boolean)\n    \n    //if the choice doesnt exixt////\n    if (to_show === []){\n        console.log(\"no results\")\n    }\n\n    setState({ ...state, shown_programs: to_show })\n  }, [state.facets])\n\n  function clearAllFacetValues(facet) {\n    const new_facet = state.facets[facet].map(facet_value => ({\n      ...facet_value, checked: false\n    }))\n    setState({ ...state, facets: { ...state.facets, [facet]: new_facet } })\n  }\n\n  // Function to pass down to the Facet_value component to modify the state in this component.\n  function updateCategory(facet, value, newChecked) {\n    const new_facet = state.facets[facet].map(({ name, checked }) => ({ name: name, checked: name == value ? newChecked : checked }))\n    setState({ ...state, facets: { ...state.facets, [facet]: new_facet } })\n  }\n\n  return (\n    <div>\n   \n      <Row>\n       \n        <Facets_container  facets={state.facets} updateCategory={updateCategory} clearAllFacetValues={clearAllFacetValues} />\n        \n\n      </Row>\n      <Row>\n        <Container className='d-flex flex-wrap cards-row'>\n          {state.shown_programs.map(x => <Programs {...x} />)}\n        </Container>\n      </Row>\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}